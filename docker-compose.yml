version: "3.8"
services:
  mqtt:
    build: ./mqtt
    ports:
      - 3001:3001
    links:
      - api
    restart: always
  
  producer:
    build: 
      context: ./worker-service/producers
      dockerfile: Dockerfile
    environment:
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=redis
    ports:
      - "3002:3002"

  consumer:
    build: 
      context: ./worker-service/consumers
      dockerfile: Dockerfile
    environment:
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=redis
    deploy:
      replicas: 2

  redis:
    image: redis
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
  
  api:
    build: ./api
    ports:
      - 3000:3000
    links:
      - mongo
    restart: always
  

  mongo:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - "3333:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
  

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - api
  
  node_exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - '^/(sys|proc|dev|host|etc)($$|/)'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    ports:
      - "8080:8080"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
  

volumes:
  mongo-data:
  grafana-data:

  